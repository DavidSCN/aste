<?xml version="1.0"?>

<precice-configuration>

<!-- filter="(%Severity% > debug) or (%Module% contains mapping) or (%Module% contains Events)" -->
  
  <log>
    <sink type="stream" output="stdout"
          filter = "%Severity% > info"
          enabled="1" />
    <!-- <sink type="stream" output="stdout" filter=""/> -->
  </log>
  <solver-interface dimensions="3">
    
    <data:scalar name="Data" />

    <mesh name="MeshA" flip-normals="no">
      <use-data name="Data" />
    </mesh>

    <mesh name="MeshB" flip-normals="no">
      <use-data name="Data" />
    </mesh>
    
    <m2n:sockets from="A" to="B" network="lo" exchange-directory=".."  distribution-type="gather-scatter" />

    <participant name="A">
      <use-mesh name="MeshA" provide="yes" />
      <write-data name="Data" mesh="MeshA" />
      <master:mpi-single />
    </participant>
    
    <participant name="B">
      <use-mesh name="MeshA" provide="no" from="A" />
      <use-mesh name="MeshB" provide="yes" />
      <read-data name="Data" mesh="MeshB" />
      <mapping:petrbf-gaussian shape-parameter="{shape_parameter:.4f}" preallocation="{preallocation}"
                               solver-rtol="1e-9" constraint="consistent"
                               direction="read" from="MeshA" to="MeshB"
                               x-dead="false" y-dead="false" z-dead="false" polynomial="separate"/>
      <master:mpi-single />
    </participant>

    
    <coupling-scheme:serial-explicit>
      <participants first="A" second="B" />
      <max-time value="1.0" />
      <timestep-length value="1" />
      <exchange data="Data" mesh="MeshA" from="A" to="B" />
      <!-- <exchange data="Data" mesh="MeshB" from="A" to="B" /> -->
    </coupling-scheme:serial-explicit>
    
  </solver-interface>
  
</precice-configuration>
